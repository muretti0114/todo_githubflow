* ToDoアプリケーションを開発しよう
- 目標： データベースを使用した簡単なWebアプリケーションを開発して，標準的なSpring Bootのレイヤ構造を理解する

** ToDoアプリケーション仕様
*** 開発の背景
- ある研究室では，毎週の全体ミーティングにおいて，メンバー各自が進捗報告を行っている
- 進捗報告は，メンバーがToDo (これからやること), Done (今週やったこと)を口頭で報告している
- しかしながら，下記の問題点が指摘されている
-- ToDo/Doneの管理方法がメンバー各自バラバラであり，きちんと記録されていない
-- 教員や先輩が，メンバー全員のToDoを俯瞰する方法がなく，適切なサポートができない
- これらの問題点を解決すべく，メンバーのToDo管理を支援するWebアプリケーションを開発する

*** ToDoアプリケーションへの要求
- 研究室のメンバーそれぞれが，自分のToDoを登録・管理し，メンバー全員で共有できるようにする
- 管理者はメンバーの情報(メンバーIDと氏名)をシステムに登録し，メンバーにIDを伝える
- メンバーは自分のIDでシステムにログイン後，タイトルを入力してToDoを作成する
-- システムは，ToDoに一意な通し番号を割り当て，タイトル，作成者，済マーク, 作成日時，完了日時の情報を付けて記録する
- メンバーは各ToDoに付与された完了ボタンを押して，ToDoを完了する
-- システムは，ToDoに完了日時を記録し，済マークを付けて情報を更新する
- メンバーは組織全員のToDoをリストで一覧できる
-- ただし，他人のToDoを作成(C)・完了(U)することはできない

** システムで管理するエンティティ
メンバー
 public class Member {
     @Id
     String mid;   //メンバーID
     String name;  //名前
 }
 

ToDo
 @Data
 @Entity
 public class ToDo {
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
     Long seq;         //通し番号
     String title;     //題目
     String mid;       //作成者
     boolean done;     //済マーク
     @Temporal(TemporalType.TIMESTAMP)
     Date createdAt;   //作成日時
     @Temporal(TemporalType.TIMESTAMP)
     Date doneAt;      //完了日時
 }

** ユースケース
- UC11: メンバを登録する
- UC12: ログインする
- UC21: 自分のToDoを見る
- UC22: ToDoを登録する
- UC23: ToDoを完了する
- UC24: みんなのToDoを見る


